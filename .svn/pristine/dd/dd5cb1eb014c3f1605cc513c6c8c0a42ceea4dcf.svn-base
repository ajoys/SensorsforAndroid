package ca.uwaterloo.lab1_203_03;

import android.support.v7.app.ActionBarActivity;
import android.support.v7.app.ActionBar;
import android.support.v4.app.Fragment;
import android.hardware.Sensor;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import ca.uwaterloo.sensortoy;

public class MainActivity extends ActionBarActivity {

	LineGraphView graph;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		if (savedInstanceState == null) {
			getSupportFragmentManager().beginTransaction()
					.add(R.id.container, new PlaceholderFragment()).commit();
		}
		
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {

		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	/**
	 * A placeholder fragment containing a simple view.
	 */
	
	public static class PlaceholderFragment extends Fragment {
		public PlaceholderFragment() {
		}
		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
				View rootView = inflater.inflate(R.layout.fragment_main, container, false);
				
				//Linear Layout
				LinearLayout vw = (LinearLayout) rootView.findViewById(R.id.relayout);
				vw.setOrientation(LinearLayout.VERTICAL);
				
				
				
				SensorManager sensorManager = (SensorManager)rootView.getContext().getSystemService(SENSOR_SERVICE);
				
				//Setting up all the different sensors
				Sensor lightSensor = sensorManager.getDefaultSensor(Sensor.TYPE_LIGHT);
				Sensor accelerometerSensor = sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
				Sensor magneticSensor = sensorManager.getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD);
				Sensor rotationSensor = sensorManager.getDefaultSensor(Sensor.TYPE_ROTATION_VECTOR);
				
				//Outputting values for the Light
				SensorEventListener lightListener = new GeneralSensorEventListener(rootView.getContext(), "Light", vw);
				sensorManager.registerListener(lightListener, lightSensor, SensorManager.SENSOR_DELAY_NORMAL );
				
				//Outputting values for magnetic field
				SensorEventListener magneticListener = new GeneralSensorEventListener(rootView.getContext(), "Magnetic Field", vw);
				sensorManager.registerListener(magneticListener, magneticSensor, SensorManager.SENSOR_DELAY_NORMAL);
				
				//Outputting values for rotation vector
				SensorEventListener rotationListener = new GeneralSensorEventListener(rootView.getContext(), "Rotation", vw);
				sensorManager.registerListener(rotationListener, rotationSensor, SensorManager.SENSOR_DELAY_NORMAL);
				
				//Outputting values for accelerometer
				SensorEventListener accelerometerListener = new GeneralSensorEventListener(rootView.getContext(), "Acceleration", vw);
				sensorManager.registerListener(accelerometerListener, accelerometerSensor, SensorManager.SENSOR_DELAY_NORMAL);
				
				
				return rootView;
			} 
		}
}
